{
    "contents" : "require('stats')\nrequire('e1071')\n\n# 0. Preparation\nData = as.matrix(read.table('data.txt'))\n\n# 1. K-Means\nClusters = kmeans(Data, 10, 10000)\nClusters = Clusters$cluster\n\nData = cbind(Data, NA)\n\nfor (i in 1:nrow(Data)) {\n  if (Clusters[i] == 1) {\n    Data[i, ncol(Data)] = 1\n  }\n  else if (Clusters[i] == 2) {\n    Data[i, ncol(Data)] = 2\n  }\n  else if (Clusters[i] == 3) {\n    Data[i, ncol(Data)] = 3\n  }\n  else if (Clusters[i] == 4){\n    Data[i, ncol(Data)] = 4\n  }  \n  else if (Clusters[i] == 5) {\n    Data[i, ncol(Data)] = 5\n  }\n  else if (Clusters[i] == 6) {\n    Data[i, ncol(Data)] = 6\n  }\n  else if (Clusters[i] == 7) {\n    Data[i, ncol(Data)] = 7\n  }\n  else if (Clusters[i] == 8){\n    Data[i, ncol(Data)] = 8\n  }  \n  else if (Clusters[i] == 9) {\n    Data[i, ncol(Data)] = 9\n  }\n  else if (Clusters[i] == 10) {\n    Data[i, ncol(Data)] = 10\n  }\n}\n\n# 2. Calculate Classifier\n\nModel <- naiveBayes(Data[,-577], as.factor(Data[,577]))\nV = Data[2, 1:(ncol(Data)-1)]\n\nprint(Data[2, ncol(Data)])\nY = predict(Model, as.data.frame(V))\n\n\n# \n# print(dim(Titanic))\n# m <- naiveBayes(Survived ~ ., data = Titanic)\n# S = predict(m, as.data.frame(Titanic)[,1:3])\n# print(S)\n\n\n\n\n\n\n# trnLabel = as.factor(trnLabel)\n# Model = NaiveBayes(trnLabel, trnData)\n# V = Data[2, 1:ncol(Data) -1]\n# print(Data[2, ncol(Data)])\n# Y = predict(Model, V)",
    "created" : 1385588154774.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3917663964",
    "id" : "A1EEFE72",
    "lastKnownWriteTime" : 1385597446,
    "path" : "C:/Users/seokhong/Desktop/Project/Project.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}